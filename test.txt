Задание:

    Разбить программу на отдельные классы (каждый класс в отдельном файле)
    Разделить поезда на два типа PassengerTrain и CargoTrain, сделать родителя для классов, который будет содержать общие методы и свойства
    Определить, какие методы могут быть помещены в private/protected и вынести их в такую секцию. В комментарии к методу обосновать, почему он был вынесен в private/protected
    Вагоны теперь делятся на грузовые и пассажирские (отдельные классы). К пассажирскому поезду можно прицепить только пассажирские, к грузовому - грузовые. 
    При добавлении вагона к поезду, объект вагона должен передаваться как аргумент метода и сохраняться во внутреннем массиве поезда, в отличие от предыдущего задания, где мы считали только кол-во вагонов. Параметр конструктора "кол-во вагонов" при этом можно удалить.


Добавить текстовый интерфейс:

Создать программу в файле main.rb, которая будет позволять пользователю через текстовый интерфейс делать следующее:
     - Создавать станции
     - Создавать поезда
     - Создавать маршруты и управлять станциями в нем (добавлять, удалять)
     - Назначать маршрут поезду
     - Добавлять вагоны к поезду
     - Отцеплять вагоны от поезда
     - Перемещать поезд по маршруту вперед и назад
     - Просматривать список станций и список поездов на станции


    У меня вопрос по заданию: 
     (При добавлении вагона к поезду, объект вагона должен передаваться как аргумент метода и сохраняться во внутреннем массиве поезда, в отличие от предыдущего задания, где мы считали только кол-во вагонов. Параметр конструктора "кол-во вагонов" при этом можно удалить.)
    
    Я добавил код к методу add_wagon(wagon) в классе Train. Но поскольку есть дочерние классы  CargoTrain и PassengerTrain, может надо там созавать метод add_wagon(wagon)? Как правильно? 


    "Этот метод будет вызываться из клиентского кода?", тогда это public, в остальном - private.  
    Этого я не понял. По идее весь код (например в классе Train), клиентский. Я же могу вызвать все методы.

    Но я поставил - private - перед методом - current_station -, потому что этот метод составная часть вышестоящих методов. А вот насчет методов  -next_station-, -prev_station- я не уверен.

    Теоретически я понял, что методы private(по аналогии с авто - я могу управлять, не зная как работает двигатель) - это методы "под капотом", но на практике их определить не совсем понятно как.

    Cейчас я все-таки перенес метод -add_wagon(wagon)- в класс -CargoTrain-
    Здесь ошибка 

    main.rb:25:in `<main>': undefined local variable or method `wg1' for main:Object (NameError)

    Метод - def add_wagon(wagon)
    @wagons += wagon if @speed.zero? && @trains.type == wagon.type
  end
    
    Вызов в main.rb - pp ct1 = CargoTrain.new
                    - pp ct1.add_wagon(wg1)
    
    Я понял, что интерпретатор не видит -wg1-. Не пойму, почему?
    На всякий случай я выложу код на github 
    адрес https://github.com/bocalo/learn_ruby/tree/master/Lesson_4